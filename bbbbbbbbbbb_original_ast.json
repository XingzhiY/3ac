{
  "FileAST": {
    "ext[0]": {
      "FuncDef": {
        "decl": {
          "Decl": {
            "name": "volchanger",
            "quals": [],
            "align": [],
            "storage": [],
            "funcspec": [],
            "type": {
              "FuncDecl": {
                "args": {
                  "ParamList": {
                    "params[0]": {
                      "Typename": {
                        "name": null,
                        "quals": [],
                        "align": null,
                        "type": {
                          "TypeDecl": {
                            "declname": null,
                            "quals": [],
                            "align": null,
                            "type": {
                              "IdentifierType": {
                                "names": [
                                  "void"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "type": {
                  "TypeDecl": {
                    "declname": "volchanger",
                    "quals": [],
                    "align": null,
                    "type": {
                      "IdentifierType": {
                        "names": [
                          "void"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "body": {
          "Compound": {
            "block_items[0]": {
              "Decl": {
                "name": "i",
                "quals": [],
                "align": [],
                "storage": [],
                "funcspec": [],
                "type": {
                  "TypeDecl": {
                    "declname": "i",
                    "quals": [],
                    "align": null,
                    "type": {
                      "IdentifierType": {
                        "names": [
                          "char"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "block_items[1]": {
              "Decl": {
                "name": "vol",
                "quals": [],
                "align": [],
                "storage": [],
                "funcspec": [],
                "type": {
                  "TypeDecl": {
                    "declname": "vol",
                    "quals": [],
                    "align": null,
                    "type": {
                      "IdentifierType": {
                        "names": [
                          "int"
                        ]
                      }
                    }
                  }
                },
                "init": {
                  "Constant": {
                    "type": "int",
                    "value": "10"
                  }
                }
              }
            },
            "block_items[2]": {
              "While": {
                "cond": {
                  "Constant": {
                    "type": "int",
                    "value": "1"
                  }
                },
                "stmt": {
                  "Compound": {
                    "block_items[0]": {
                      "Assignment": {
                        "op": "=",
                        "lvalue": {
                          "ID": {
                            "name": "i"
                          }
                        },
                        "rvalue": {
                          "FuncCall": {
                            "name": {
                              "ID": {
                                "name": "getc"
                              }
                            }
                          }
                        }
                      }
                    },
                    "block_items[1]": {
                      "If": {
                        "cond": {
                          "BinaryOp": {
                            "op": "==",
                            "left": {
                              "ID": {
                                "name": "i"
                              }
                            },
                            "right": {
                              "Constant": {
                                "type": "char",
                                "value": "'q'"
                              }
                            }
                          }
                        },
                        "iftrue": {
                          "Break": {}
                        }
                      }
                    },
                    "block_items[2]": {
                      "Switch": {
                        "cond": {
                          "ID": {
                            "name": "i"
                          }
                        },
                        "stmt": {
                          "Compound": {
                            "block_items[0]": {
                              "Case": {
                                "expr": {
                                  "Constant": {
                                    "type": "char",
                                    "value": "'+'"
                                  }
                                },
                                "stmts[0]": {
                                  "UnaryOp": {
                                    "op": "p++",
                                    "expr": {
                                      "ID": {
                                        "name": "vol"
                                      }
                                    }
                                  }
                                },
                                "stmts[1]": {
                                  "Break": {}
                                }
                              }
                            },
                            "block_items[1]": {
                              "Case": {
                                "expr": {
                                  "Constant": {
                                    "type": "char",
                                    "value": "'-'"
                                  }
                                },
                                "stmts[0]": {
                                  "UnaryOp": {
                                    "op": "p--",
                                    "expr": {
                                      "ID": {
                                        "name": "vol"
                                      }
                                    }
                                  }
                                },
                                "stmts[1]": {
                                  "Break": {}
                                }
                              }
                            },
                            "block_items[2]": {
                              "Default": {
                                "stmts[0]": {
                                  "FuncCall": {
                                    "name": {
                                      "ID": {
                                        "name": "printf"
                                      }
                                    },
                                    "args": {
                                      "ExprList": {
                                        "exprs[0]": {
                                          "Constant": {
                                            "type": "string",
                                            "value": "\"unrecognized command: %c\\n\""
                                          }
                                        },
                                        "exprs[1]": {
                                          "ID": {
                                            "name": "i"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}